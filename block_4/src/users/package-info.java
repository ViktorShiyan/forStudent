/**
 * Создать класс Пользователь с полями: логин, пароль, идентификатор
 * (поля закрыты, доступ к полям через методы); конструктор с параметрами,
 * задающий значения всех полей. Переопределить метод public String toString()
 * чтобы он выводил информацию о пользователе в следующем виде: «Пользователь
 * № идентификатор: логин». В целях безопасности, в классе будет храниться не
 * исходный пароль, а результат его шифрования. Следовательно, необходим метод
 * ciphrIt(пароль) – шифрующий пароль.
 *
 * Создать класс UsersList, хранящий набор элементов класса Пользователь в
 * поле myList типа массив. Поле myList закрытое, доступ к нему – через методы
 * getUsers, addUsers. Метод addUsers(Пользователь), добавляет пользователя в
 * myList, при попытке добавления пользователя с существующим логином –
 * выбрасывать исключение. Создать метод delUser(Пользователь), удаляющий
 * заданного пользователя, при попытке удаления из пустого массива – выбрасывать
 * исключение. Создать метод boolean findById(идентификатор), возвращающий true
 * при нахождении в массиве пользователя с заданным идентификатором, в
 * противном случае, возвращать false. Сохранить решение для Блока 5.
 */
package users;
